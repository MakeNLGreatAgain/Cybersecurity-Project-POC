# -*- coding: utf-8 -*-
"""fetch_nvd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CtPiwkqszB-nMjKrZ1Arh3zKCqgYk4Rv
"""

import pandas as pd
import requests
from datetime import date, timedelta

def fetch_nvd(days=360, start=0, results_per_page=2000):
    # NVD API: https://nvd.nist.gov/developers/vulnerabilities
    pub_end = date.today()
    pub_start = pub_end - timedelta(days=days)
    params = {
        "pubStartDate": f"{pub_start}T00:00:00.000",
        "pubEndDate":   f"{pub_end}T23:59:59.999",
        "startIndex": start,
        "resultsPerPage": results_per_page,
    }
    url = "https://services.nvd.nist.gov/rest/json/cves/2.0"
    r = requests.get(url, params=params, timeout=60)
    r.raise_for_status()
    js = r.json()
    items = []
    for v in js.get("vulnerabilities", []):
        cve = v["cve"]
        cve_id = cve["id"]
        pub = cve.get("published", None)
        # 取 CVSS v3.1 (优先) 或 v3
        cvss = None
        metrics = cve.get("metrics", {})
        for key in ("cvssMetricV31", "cvssMetricV30"):
            if key in metrics and metrics[key]:
                cvss = metrics[key][0]["cvssData"]["baseScore"]
                break
        items.append({"cve_id": cve_id, "cvss_score": cvss, "published_date": pub})
    df = pd.DataFrame(items)
    df["cvss_score"] = pd.to_numeric(df["cvss_score"], errors="coerce")
    df["published_date"] = pd.to_datetime(df["published_date"], errors="coerce")
    return df.dropna(subset=["cvss_score", "published_date"])
