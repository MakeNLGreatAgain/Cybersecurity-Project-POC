# -*- coding: utf-8 -*-
"""fetch_kev.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O73cVwT7CckbhHNZOWMFu6lPGvelzIx6
"""

import os, time, json, requests
import pandas as pd

PRIMARY_JSON = "https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json"
# 官方镜像（示例：cisagov/kev-data 仓库中的 JSON 原样镜像）
MIRROR_JSON  = "https://raw.githubusercontent.com/cisagov/kev-data/main/known_exploited_vulnerabilities.json"
LOCAL_CACHE  = "data/kev_latest.json"   # 你可以先手动下载一份做兜底

def fetch_json_with_retry(url, retries=3, timeout=15):
    for i in range(retries):
        try:
            r = requests.get(url, timeout=timeout)
            r.raise_for_status()
            return r.json()
        except Exception as e:
            if i == retries - 1:
                raise
            time.sleep(2 * (i + 1))

def load_kev_json():
    # 1) 试官方
    try:
        js = fetch_json_with_retry(PRIMARY_JSON)
        return js, "primary"
    except Exception:
        pass
    # 2) 试镜像
    try:
        js = fetch_json_with_retry(MIRROR_JSON)
        return js, "mirror"
    except Exception:
        pass
    # 3) 本地兜底
    if os.path.exists(LOCAL_CACHE):
        with open(LOCAL_CACHE, "r", encoding="utf-8") as f:
            return json.load(f), "local"
    raise RuntimeError("KEV JSON unavailable from primary/mirror and no local cache found.")

def kev_to_dataframe(js):
    # 官方 JSON 结构：顶层通常含 "vulnerabilities" 列表（字段名可能会调整，建议打印 keys 看一眼）
    # 常见字段：cveID、vendorProject、product、dateAdded、dueDate 等
    items = js.get("vulnerabilities") or js.get("Vulnerabilities") or js
    df = pd.json_normalize(items)
    # 统一成 cve_id + in_kev 标识位
    col_map = {c: c for c in df.columns}
    if "cveID" in df.columns: col_map["cveID"] = "cve_id"
    df = df.rename(columns=col_map)
    df["in_kev"] = 1
    # 只保留你需要的列；其余列（如 dateAdded、vendorProject）可留作特征
    keep = [c for c in ["cve_id", "in_kev", "dateAdded", "vendorProject", "product"] if c in df.columns]
    return df[keep].drop_duplicates(subset=["cve_id"])

if __name__ == "__main__":
    js, source = load_kev_json()
    df_kev = kev_to_dataframe(js)
    print(f"KEV loaded from: {source}, rows={len(df_kev)}")
    df_kev.to_csv("kev_raw.csv", index=False)

df = pd.read_csv("kev_raw.csv")
print(df.head())  # 显示前几行